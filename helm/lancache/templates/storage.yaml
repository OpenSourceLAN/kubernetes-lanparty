apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "server.fullname" . }}-cache
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  # TODO: is ReadWriteMany going to break the cache? Logs?
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ template "server.fullname" . }}
  local:
    path: {{ .Values.server.storage.path }}/cache
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .Values.server.storage.hostname | quote }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "server.fullname" . }}-cache
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: {{ template "server.fullname" . }}
  volumeName:  {{ template "server.fullname" . }}-cache
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "server.fullname" . }}-logs
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  # TODO: is ReadWriteMany going to break the cache? Logs?
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ template "server.fullname" . }}
  local:
    path: {{ .Values.server.storage.path }}/logs
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .Values.server.storage.hostname | quote }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "server.fullname" . }}-logs
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: {{ template "server.fullname" . }}
  volumeName:  {{ template "server.fullname" . }}-logs
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ template "server.fullname" . }}
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer