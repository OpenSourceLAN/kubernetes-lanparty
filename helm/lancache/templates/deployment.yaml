apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "server.fullname" . }}
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
   matchLabels:
     app: {{ template "server.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "server.fullname" . }}
    spec:
      {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
      - name: cache
        image: "{{ .Values.imagePrefix}}{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        volumeMounts:
        - name: cache
          mountPath: /data/cache
        - name: logs
          mountPath: /data/logs
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: {{ template "server.fullname" . }}-cache
      - name: logs
        persistentVolumeClaim:
          claimName: {{ template "server.fullname" . }}-logs
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app: {{ template "server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  ports:
  - port: 80
    name: web
  - port: 443
    name: sniproxy
  clusterIP: None
  selector:
    app: {{ template "server.fullname" . }}
---
apiVersion: v1
kind: Service
metadata:
  name: lancachedirect
  annotations:
    metallb.universe.tf/address-pool: default
spec:
  allocateLoadBalancerNodePorts: false
  externalTrafficPolicy: Local
  internalTrafficPolicy: Local
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  selector:
    app: {{ template "server.fullname" . }}
  type: LoadBalancer